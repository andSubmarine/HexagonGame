<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initializing variables
x = room_width / 2
y = room_height / 2

movement = 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Camera movement controlled by defeault by the arrow keys
xpositive = keyboard_check(vk_right);
xnegative = keyboard_check(vk_left);
ypositive = keyboard_check(vk_down);
ynegative = keyboard_check(vk_up);

// Determine direction to move towards:
if (x &gt; movement * 2 and x &lt; room_width - movement * 2) {
    if (xpositive == true and xnegative != true) {
        x += movement;
    } else if (xpositive != true and xnegative == true) {
        x -= movement;
    }
} else if (x &gt; movement * 2 + 1 and not (x &lt; room_width - movement * 2)) {
    if (xpositive == true and xnegative != true) {
        x += movement;
    }
} else if (not (x &gt; movement * 2) and not (x &lt; room_width - movement * 2 - 1)) {
    if (xpositive != true and xnegative == true) {
        x -= movement;
    }
}

if (y &gt; movement * 2 and y &lt; room_height - movement * 2) {   
    if (ypositive == true and ynegative != true) {
        y += movement;    
    } else if (ypositive != true and ynegative == true) {
        y -= movement;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>5,5</point>
  </PhysicsShapePoints>
</object>
