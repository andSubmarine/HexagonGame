<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_players</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-500</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initializing variables

// Set graphical properties
image_xscale = 0.2;
image_yscale = 0.2;
image_speed = 0;

// Sets local variables
movement = 15;
player_id = 0;

// Arrays for all entities
entity_0[0] = 0;
entity_1[0] = 0;
entity_2[0] = 0;
entity_3[0] = 0;  

// Centers position
x = room_width / 2;
y = room_height / 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Camera movement controlled by defeault by the arrow keys
right   = keyboard_check(vk_right);
left    = -keyboard_check(vk_left);
down    = keyboard_check(vk_down);
up      = -keyboard_check(vk_up);
mousex  = mouse_x;
mousey  = mouse_y;

// Determine direction to move towards:
xmove = right + left;   // If positive move right, if negative move left
ymove = down + up;      // If positive move down, if negative move up

// Specific movements &lt;- only if game is not paused
if (global.paused != true) {
    if (xmove == 1) {
        if (x &lt; (room_width - 64)) {
            x += movement;
        }
    } else if (xmove == -1) {
        if (x &gt;= 64) {
            x -= movement;
        }
    }

    if (ymove == 1) {
        if (y &lt; (room_height - 64)) {
            y += movement;    
        }
    } else if (ymove == -1) {
        if (y &gt;= 64) {
            y -= movement;
        }
    }
}

/*
// If the mouse is also moved, then the player will also move accordingly
if (lastMouseX != mousex or lastMouseY != mousey) {
    x = mousex;
    y = mousey;
}

lastMouseX = mousex;
lastMouseY = mousey;
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>5,5</point>
  </PhysicsShapePoints>
</object>
